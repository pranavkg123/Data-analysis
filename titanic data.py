# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12-8RqKse6vAxtNNdDElIhv8VmgMQWtKJ
"""

# Importing required libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load a dataset (e.g., Titanic dataset from Seaborn)
data = sns.load_dataset('titanic')

# Display the first few rows of the dataset
print("First 5 rows of the dataset:")
print(data.head())

# Basic information about the dataset
print("\nDataset Info:")
print(data.info())

# Check for missing values
print("\nMissing Values:")
print(data.isnull().sum())

# Fill missing values (e.g., Age with the median, Embark_town with the mode)
data['age'].fillna(data['age'].median(), inplace=True)
data['embark_town'].fillna(data['embark_town'].mode()[0], inplace=True)

# Drop rows with missing values in the 'deck' column
data.drop(columns=['deck'], inplace=True)

# Basic statistical summary
print("\nStatistical Summary:")
print(data.describe())

# Exploratory Data Analysis (EDA)
# 1. Visualize the distribution of age
plt.figure(figsize=(8, 6))
sns.histplot(data['age'], kde=True, bins=30, color='blue')
plt.title('Age Distribution')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.show()

# 2. Analyze survival rate by gender
plt.figure(figsize=(8, 6))
sns.barplot(x='sex', y='survived', data=data, palette='viridis')
plt.title('Survival Rate by Gender')
plt.xlabel('Gender')
plt.ylabel('Survival Rate')
plt.show()

# 3. Correlation heatmap of numerical features
plt.figure(figsize=(10, 8))
corr = data.corr()
sns.heatmap(corr, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Heatmap')
plt.show()

# 4. Passenger class distribution
plt.figure(figsize=(8, 6))
sns.countplot(x='class', data=data, palette='pastel')
plt.title('Passenger Class Distribution')
plt.xlabel('Class')
plt.ylabel('Count')
plt.show()

# 5. Pair plot of selected features
selected_features = ['age', 'fare', 'pclass', 'survived']
sns.pairplot(data[selected_features], hue='survived', palette='coolwarm')
plt.show()

# Save the cleaned dataset to a CSV file
data.to_csv('cleaned_titanic_data.csv', index=False)
print("\nCleaned data saved to 'cleaned_titanic_data.csv'.")